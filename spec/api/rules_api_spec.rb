=begin
#ARTIK Cloud API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for ArtikCloud::RulesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RulesApi' do
  before do
    # run before each test
    @instance = ArtikCloud::RulesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RulesApi' do
    it 'should create an instance of RulesApi' do
      # expect(@instance).to be_instance_of(ArtikCloud::RulesApi)
    end
  end

  # unit tests for create_rule
  # Create Rule
  # Create a new Rule
  # @param rule_info Rule object that needs to be added
  # @param user_id User ID
  # @param [Hash] opts the optional parameters
  # @return [RuleEnvelope]
  describe 'create_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_rule
  # Delete Rule
  # Delete a Rule
  # @param rule_id Rule ID.
  # @param [Hash] opts the optional parameters
  # @return [RuleEnvelope]
  describe 'delete_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_rule
  # Get Rule
  # Get a rule using the Rule ID
  # @param rule_id Rule ID.
  # @param [Hash] opts the optional parameters
  # @return [RuleEnvelope]
  describe 'get_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_rule
  # Update Rule
  # Update an existing Rule
  # @param rule_id Rule ID.
  # @param rule_info Rule object that needs to be updated
  # @param [Hash] opts the optional parameters
  # @return [RuleEnvelope]
  describe 'update_rule test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
