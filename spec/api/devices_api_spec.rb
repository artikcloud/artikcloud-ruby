=begin
#ARTIK Cloud API

#No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for ArtikCloud::DevicesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DevicesApi', :vcr do
  before do
    # run before each test
  let(:instance) { ArtikCloud::DevicesApi.new(API_CLIENT) }
  end

  after do
    # run after each test
  end

  describe 'test an instance of DevicesApi' do
    it 'should create an instance of DevicesApi' do
      # expect(@instance).to be_instance_of(ArtikCloud::DevicesApi)
    end
  end

  # unit tests for add_device
  # Add Device
  # Create a device
  # @param device Device to be added to the user
  # @param [Hash] opts the optional parameters
  # @return [DeviceEnvelope]
  describe 'add_device test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device
  # Delete Device
  # Deletes a device
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [DeviceEnvelope]
  describe 'delete_device test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_device_token
  # Delete Device Token
  # Deletes a device&#39;s token
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [DeviceTokenEnvelope]
  describe 'delete_device_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device
  # Get Device
  # Retrieves a device
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [DeviceEnvelope]
  describe 'get_device test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_device_presence
  # Get device presence information
  # Return the presence status of the given device along with the time it was last seen
  # @param device_id Device ID.
  # @param [Hash] opts the optional parameters
  # @return [PresenceEnvelope]
  describe 'get_device_presence test' do
    let(:device) { FactoryGirl.create(:device1) }

    it "should work" do
      result = instance.get_device_presence(device.id)
      expect(result.sdid).to eq device.id
      expect(result.data.last_seen_on).to_not be_nil
    end
  end

  # unit tests for get_device_token
  # Get Device Token
  # Retrieves a device&#39;s token
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [DeviceTokenEnvelope]
  describe 'get_device_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device
  # Update Device
  # Updates a device
  # @param device_id deviceId
  # @param device Device to be updated
  # @param [Hash] opts the optional parameters
  # @return [DeviceEnvelope]
  describe 'update_device test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_device_token
  # Update Device Token
  # Updates a device&#39;s token
  # @param device_id deviceId
  # @param [Hash] opts the optional parameters
  # @return [DeviceTokenEnvelope]
  describe 'update_device_token test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
