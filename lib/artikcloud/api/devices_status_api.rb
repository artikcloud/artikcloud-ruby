=begin
#ARTIK Cloud API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module ArtikCloud
  class DevicesStatusApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get Device Status
    # Get Device Status
    # @param device_id Device ID.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :include_snapshot Include device snapshot into the response
    # @option opts [BOOLEAN] :include_snapshot_timestamp Include device snapshot timestamp into the response
    # @return [DeviceStatus]
    def get_device_status(device_id, opts = {})
      data, _status_code, _headers = get_device_status_with_http_info(device_id, opts)
      return data
    end

    # Get Device Status
    # Get Device Status
    # @param device_id Device ID.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :include_snapshot Include device snapshot into the response
    # @option opts [BOOLEAN] :include_snapshot_timestamp Include device snapshot timestamp into the response
    # @return [Array<(DeviceStatus, Fixnum, Hash)>] DeviceStatus data, response status code and response headers
    def get_device_status_with_http_info(device_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DevicesStatusApi.get_device_status ..."
      end
      # verify the required parameter 'device_id' is set
      fail ArgumentError, "Missing the required parameter 'device_id' when calling DevicesStatusApi.get_device_status" if device_id.nil?
      # resource path
      local_var_path = "/devices/{deviceId}/status".sub('{format}','json').sub('{' + 'deviceId' + '}', device_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'includeSnapshot'] = opts[:'include_snapshot'] if !opts[:'include_snapshot'].nil?
      query_params[:'includeSnapshotTimestamp'] = opts[:'include_snapshot_timestamp'] if !opts[:'include_snapshot_timestamp'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['artikcloud_oauth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DeviceStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DevicesStatusApi#get_device_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Devices Status
    # Get Devices Status
    # @param dids List of device ids (comma-separated) for which the statuses are requested.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :include_snapshot Include device snapshot into the response
    # @option opts [BOOLEAN] :include_snapshot_timestamp Include device snapshot timestamp into the response
    # @return [DeviceStatusBatch]
    def get_devices_status(dids, opts = {})
      data, _status_code, _headers = get_devices_status_with_http_info(dids, opts)
      return data
    end

    # Get Devices Status
    # Get Devices Status
    # @param dids List of device ids (comma-separated) for which the statuses are requested.
    # @param [Hash] opts the optional parameters
    # @option opts [BOOLEAN] :include_snapshot Include device snapshot into the response
    # @option opts [BOOLEAN] :include_snapshot_timestamp Include device snapshot timestamp into the response
    # @return [Array<(DeviceStatusBatch, Fixnum, Hash)>] DeviceStatusBatch data, response status code and response headers
    def get_devices_status_with_http_info(dids, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DevicesStatusApi.get_devices_status ..."
      end
      # verify the required parameter 'dids' is set
      fail ArgumentError, "Missing the required parameter 'dids' when calling DevicesStatusApi.get_devices_status" if dids.nil?
      # resource path
      local_var_path = "/devices/status".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'dids'] = dids
      query_params[:'includeSnapshot'] = opts[:'include_snapshot'] if !opts[:'include_snapshot'].nil?
      query_params[:'includeSnapshotTimestamp'] = opts[:'include_snapshot_timestamp'] if !opts[:'include_snapshot_timestamp'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['artikcloud_oauth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DeviceStatusBatch')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DevicesStatusApi#get_devices_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Device Status
    # Update Device Status
    # @param device_id Device ID.
    # @param [Hash] opts the optional parameters
    # @option opts [DeviceStatusPut] :body Body
    # @return [DeviceStatus]
    def put_device_status(device_id, opts = {})
      data, _status_code, _headers = put_device_status_with_http_info(device_id, opts)
      return data
    end

    # Update Device Status
    # Update Device Status
    # @param device_id Device ID.
    # @param [Hash] opts the optional parameters
    # @option opts [DeviceStatusPut] :body Body
    # @return [Array<(DeviceStatus, Fixnum, Hash)>] DeviceStatus data, response status code and response headers
    def put_device_status_with_http_info(device_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: DevicesStatusApi.put_device_status ..."
      end
      # verify the required parameter 'device_id' is set
      fail ArgumentError, "Missing the required parameter 'device_id' when calling DevicesStatusApi.put_device_status" if device_id.nil?
      # resource path
      local_var_path = "/devices/{deviceId}/status".sub('{format}','json').sub('{' + 'deviceId' + '}', device_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['artikcloud_oauth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DeviceStatus')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DevicesStatusApi#put_device_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
